<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Graphics on TheSeaToad</title><link>https://theseatoad.com/tags/graphics/</link><description>Recent content in Graphics on TheSeaToad</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 15 Aug 2022 10:54:31 -0700</lastBuildDate><atom:link href="https://theseatoad.com/tags/graphics/index.xml" rel="self" type="application/rss+xml"/><item><title>Rust For Game Development #2 -- Simple cross-platform graphics</title><link>https://theseatoad.com/rustforgamedevelopment2/</link><pubDate>Mon, 15 Aug 2022 10:54:31 -0700</pubDate><guid>https://theseatoad.com/rustforgamedevelopment2/</guid><description>Prelude Follow along this tutorial using cooresponding repository on Github. Snippets here will highlight important structs and methods, but for compiling code, refer to the link above.
This post will be all about graphics. Writing a game will not look like this in practice, unless you write your own engine. If this is enjoyable to you, maybe you can go about writing your own graphics engine. If not, there is plently of higher-level crates to leverage.</description></item></channel></rss>